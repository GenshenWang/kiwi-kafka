app.version=@project.version@

server.port=8080

spring.mvc.async.request-timeout=30m

kafka.base.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
kafka.base.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
kafka.base.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.base.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.base.consumer.autoOffsetReset=${kafka.consumer.autoOffsetReset:earliest}
kafka.base.consumer.enableAutoCommit=${kafka.consumer.enableAutoCommit:false}
kafka.base.consumer.maxPollRecords=${kafka.consumer.maxPollRecords:500}
kafka.base.consumer.groupIdSuffix=${kafka.consumer.group-id-suffix:-${random.long(1000000)}}

kafka.clusters.default.client.bootstrapServers=${kafka.bootstrapServers}

kafka.clusters.secure.client.bootstrapServers=localhost:9024,localhost:9025,localhost:9026
kafka.clusters.secure.client.securityProtocol=SSL
kafka.clusters.secure.client.sslTruststoreLocation=scripts/ssl/kafka.client.truststore.jks
kafka.clusters.secure.client.sslTruststorePassword=secret
kafka.clusters.secure.client.sslKeystoreLocation=scripts/ssl/kafka.client.truststore.jks
kafka.clusters.secure.client.sslKeystorePassword=secret
kafka.clusters.secure.client.sslEndpointIdentificationAlgorithm=

spring.profiles.active=read-admin,read-consumer,write-producer,write-admin
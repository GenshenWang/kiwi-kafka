app.version=@project.version@

server.port=8080

spring.mvc.async.request-timeout=30m

kafka.base.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
kafka.base.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
kafka.base.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.base.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer

kafka.clusters.default.client.bootstrapServers=${kafka.bootstrapServers}
kafka.clusters.default.consumer.autoOffsetReset=${kafka.consumer.autoOffsetReset:earliest}
kafka.clusters.default.consumer.enableAutoCommit=${kafka.consumer.enableAutoCommit:false}
kafka.clusters.default.consumer.maxPollRecords=${kafka.consumer.maxPollRecords:500}
kafka.clusters.default.consumer.groupIdSuffix=${kafka.consumer.group-id-suffix:-${random.long(1000000)}}

kafka.clusters.other.client.bootstrapServers=${kafka.bootstrapServers}
kafka.clusters.other.consumer.autoOffsetReset=${kafka.consumer.autoOffsetReset:earliest}
kafka.clusters.other.consumer.enableAutoCommit=${kafka.consumer.enableAutoCommit:false}
kafka.clusters.other.consumer.maxPollRecords=${kafka.consumer.maxPollRecords:500}
kafka.clusters.other.consumer.groupIdSuffix=${kafka.consumer.group-id-suffix:-${random.long(1000000)}}

spring.profiles.active=read-admin,read-consumer,write-producer,write-admin